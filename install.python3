#!/usr/bin/python3
import os, sys, random, string, subprocess, time, io, socket

# التأكد من أن البايثون 3
if sys.version_info.major != 3:
    print("Please run with python3.")
    sys.exit(1)

# ========================================
# المتغيرات الرئيسية
# ========================================
rPath = os.path.dirname(os.path.realpath(__file__))
rPackages = [
    "cpufrequtils","iproute2","python","net-tools","dirmngr","gpg-agent",
    "software-properties-common","libmaxminddb0","libmaxminddb-dev","mmdb-bin",
    "libcurl4","libgeoip-dev","libxslt1-dev","libonig-dev","e2fsprogs",
    "wget","mariadb-server","sysstat","alsa-utils","v4l-utils","mcrypt",
    "certbot","iptables-persistent","libjpeg-dev","libpng-dev","php-ssh2",
    "xz-utils","zip","unzip"
]
rRemove = ["mysql-server"]

rMySQLCnf = '''# XUI
[client]
port = 3306
[mysqld_safe]
nice = 0
[mysqld]
user = mysql
port = 3306
basedir = /usr
datadir = /var/lib/mysql
skip-external-locking
skip-name-resolve
bind-address = *
...
'''  # يمكن تكملة الإعدادات كما في الأصل

rRedisConfig = '''bind *
port 6379
daemonize yes
...'''  # تكملة كما في الأصل

rSysCtl = '''# XUI.one
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = fq
...
'''

rSystemd = '''[Unit]
Description=XUI.one Service
After=network.target
...
'''

rChoice = "23456789abcdefghjkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ"

# ========================================
# دوال مساعدة
# ========================================
def generate(length=32):
    return ''.join(random.choice(rChoice) for i in range(length))

def run(cmd, silent=True):
    return os.system(cmd + (" >/dev/null 2>&1" if silent else ""))

def getIP():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    return s.getsockname()[0]

def printc(msg, colour='\033[92m', padding=0):
    print("%s%s%s" % (colour, msg, '\033[0m'))

# ========================================
# قراءة نوع السيرفر
# ========================================
server_type = "main"  # القيمة الافتراضية
try:
    with open("/root/xui_server_type.txt", "r") as f:
        server_type = f.read().strip()
except FileNotFoundError:
    pass
printc(f"تم اختيار نوع السيرفر: {server_type}")

# ========================================
# التحقق من الملفات الأساسية
# ========================================
if not os.path.exists("./xui.tar.gz") and not os.path.exists("./xui_trial.tar.gz"):
    printc("Fatal Error: xui.tar.gz is missing. Download it first.", '\033[91m')
    sys.exit(1)

# ========================================
# تثبيت الحزم وحذف الغير مرغوب
# ========================================
for pkg in rRemove:
    printc(f"Removing {pkg}")
    run(f"sudo apt-get remove -y {pkg}")
for pkg in rPackages:
    printc(f"Installing {pkg}")
    run(f"sudo apt-get install -y {pkg}")

# ========================================
# إنشاء المستخدم والمجلدات
# ========================================
try:
    subprocess.check_output("getent passwd xui".split())
except:
    printc("Creating user xui")
    run("sudo adduser --system --shell /bin/false --group --disabled-login xui")
run("mkdir -p /home/xui")

# ========================================
# تثبيت XUI
# ========================================
printc("Installing XUI")
if os.path.exists("./xui.tar.gz"):
    run('sudo tar -zxvf "./xui.tar.gz" -C "/home/xui/"')
elif os.path.exists("./xui_trial.tar.gz"):
    run('sudo tar -zxvf "./xui_trial.tar.gz" -C "/home/xui/"')

# ========================================
# إعداد MySQL حسب نوع السيرفر
# ========================================
rUsername = generate()
rPassword = generate()
rDatabase = "xui"
rPort = 3306
rExtra = ""

if server_type == "main":
    # تكوين قاعدة بيانات كاملة
    if not os.path.exists("/etc/mysql/my.cnf") or open("/etc/mysql/my.cnf").read(5) != "# XUI":
        with io.open("/etc/mysql/my.cnf", "w", encoding="utf-8") as f:
            f.write(rMySQLCnf)
        run("sudo service mariadb restart")
    rRet = os.system("mysql -u root -e 'SELECT VERSION();'")
    if rRet != 0:
        while True:
            rExtra = " -p%s" % input("Root MySQL Password: ")
            rRet = os.system(f"mysql -u root{rExtra} -e 'SELECT VERSION();'")
            if rRet == 0: break
            printc("Invalid password! Please try again.", '\033[93m')
    run(f'sudo mysql -u root{rExtra} -e "DROP DATABASE IF EXISTS xui; CREATE DATABASE IF NOT EXISTS xui;"')
    run(f'sudo mysql -u root{rExtra} -e "CREATE USER \'{rUsername}\'@\'localhost\' IDENTIFIED BY \'{rPassword}\';"')
    run(f'sudo mysql -u root{rExtra} -e "GRANT ALL PRIVILEGES ON xui.* TO \'{rUsername}\'@\'localhost\';"')

elif server_type == "lb":
    # Load Balancer خفيف بدون DB
    printc("LB server: skipping MySQL installation", '\033[94m')
elif server_type == "update":
    # تحديث فقط
    printc("Update server: skipping DB creation", '\033[94m')

# ========================================
# إعداد Redis فقط للسيرفر الرئيسي
# ========================================
if server_type == "main":
    redis_conf_path = "/home/xui/bin/redis/redis.conf"
    if not os.path.exists(redis_conf_path):
        os.makedirs(os.path.dirname(redis_conf_path), exist_ok=True)
        with io.open(redis_conf_path, "w", encoding="utf-8") as f:
            f.write(rRedisConfig)

# ========================================
# إعداد Systemd و sysctl
# ========================================
if server_type == "main":
    with io.open("/etc/systemd/system/xuione.service", "w", encoding="utf-8") as f:
        f.write(rSystemd)
    run("sudo systemctl daemon-reload")
    run("sudo systemctl enable xuione")
    with io.open("/etc/sysctl.conf", "w", encoding="utf-8") as f:
        f.write(rSysCtl)
    run("sudo sysctl -p")

# ========================================
# إنهاء العملية
# ========================================
printc("Installation completed!", '\033[92m')
printc(f"Access: http://{getIP()}/", '\033[96m')
with io.open(rPath + "/credentials.txt", "w", encoding="utf-8") as f:
    f.write(f"MySQL Username: {rUsername}\nMySQL Password: {rPassword}")
